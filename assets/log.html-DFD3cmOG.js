import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,d as t,o as n}from"./app-GvbLqAZr.js";const r={};function i(d,o){return n(),l("div",null,o[0]||(o[0]=[t('<h1 id="mysql-的各种-log" tabindex="-1"><a class="header-anchor" href="#mysql-的各种-log"><span>Mysql 的各种 Log</span></a></h1><h2 id="redolog" tabindex="-1"><a class="header-anchor" href="#redolog"><span>RedoLog</span></a></h2><ol><li>是 Innodb 引擎生成的日志，实现了事务的<strong>持久性</strong>。增删改的数据先改 buffer pool，然后将该操作<br> 记录在 RedoLog 里。</li><li>RedoLog 也是先写到 <code>redolog buffer</code> 里，再按一个策略写入文件。</li></ol><ul><li><code>redolog buffer</code> 是一个环形结构，会被定时的刷盘，也有一个水位线，高于水位线也会刷盘</li></ul><ol start="3"><li>RedoLog 是追加写，更快。</li></ol><h2 id="binlog" tabindex="-1"><a class="header-anchor" href="#binlog"><span>BinLog</span></a></h2><ol><li>是 Server 层的日志，用于<strong>数据备份，主从复制</strong></li><li>Binlog 文件是记录了所有数据库表结构变更和表数据修改的日志，不会记录查询类的操作</li><li>事务执行时将操作写入 <code>binlog cache</code>，提交后写入文件</li></ol><h2 id="redolog-和-binlog-的配合" tabindex="-1"><a class="header-anchor" href="#redolog-和-binlog-的配合"><span>RedoLog 和 BinLog 的配合</span></a></h2><p>两个 Log 产生于 Mysql 的不同部分，就可能出现一致性的问题。比如：RedoLog 在事务执行过程中就可能被写入，而 BinLog 只有<br> 事务被提交后才会被写入。如果事务提交后而 BinLog 没被写入的时候发生异常，那么两个日志就可能出现不一致。不一致会导致主库与从库<br> 数据不一致。因此 Innodb 选择将 RedoLog 的写入变成两阶段提交：</p><ul><li>prepare阶段</li><li>commit阶段，binlog 被写入后 redolog 确认被提交</li></ul><h2 id="undolog" tabindex="-1"><a class="header-anchor" href="#undolog"><span>UndoLog</span></a></h2><ol><li>是 Innodb 引擎生成的日志，实现了事务的<strong>原子性</strong>，用于<strong>事件回滚，MVCC</strong></li><li>buffer pool 中有 undo 页，undolog 被写入 undo 页后会和数据页一样被 RedoLog 记录，保证了持久化。</li></ol><p>需要注意的是，写入文件并不代表写入磁盘，也有可能是写入 Page Cache。同时，不当的日志写入磁盘的策略会对<strong>磁盘IO</strong>有影响。</p>',13)]))}const s=e(r,[["render",i],["__file","log.html.vue"]]),c=JSON.parse('{"path":"/posts/backend/db/log.html","title":"Mysql 的各种 Log","lang":"zh-CN","frontmatter":{"date":"2025-02-25T00:00:00.000Z","category":["数据库"],"tag":["Mysql"],"footer":"凉了的馒头","description":"Mysql 的各种 Log RedoLog 是 Innodb 引擎生成的日志，实现了事务的持久性。增删改的数据先改 buffer pool，然后将该操作 记录在 RedoLog 里。 RedoLog 也是先写到 redolog buffer 里，再按一个策略写入文件。 redolog buffer 是一个环形结构，会被定时的刷盘，也有一个水位线，高于水...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/backend/db/log.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"Mysql 的各种 Log"}],["meta",{"property":"og:description","content":"Mysql 的各种 Log RedoLog 是 Innodb 引擎生成的日志，实现了事务的持久性。增删改的数据先改 buffer pool，然后将该操作 记录在 RedoLog 里。 RedoLog 也是先写到 redolog buffer 里，再按一个策略写入文件。 redolog buffer 是一个环形结构，会被定时的刷盘，也有一个水位线，高于水..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-28T02:00:41.000Z"}],["meta",{"property":"article:tag","content":"Mysql"}],["meta",{"property":"article:published_time","content":"2025-02-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-28T02:00:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Mysql 的各种 Log\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-25T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-28T02:00:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Tyz\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"RedoLog","slug":"redolog","link":"#redolog","children":[]},{"level":2,"title":"BinLog","slug":"binlog","link":"#binlog","children":[]},{"level":2,"title":"RedoLog 和 BinLog 的配合","slug":"redolog-和-binlog-的配合","link":"#redolog-和-binlog-的配合","children":[]},{"level":2,"title":"UndoLog","slug":"undolog","link":"#undolog","children":[]}],"git":{"createdTime":1740708041000,"updatedTime":1740708041000,"contributors":[{"name":"BUAA-TYZ","username":"BUAA-TYZ","email":"2506741037@qq.com","commits":1,"url":"https://github.com/BUAA-TYZ"}]},"readingTime":{"minutes":1.51,"words":452},"filePathRelative":"posts/backend/db/log.md","localizedDate":"2025年2月25日","excerpt":"\\n<h2>RedoLog</h2>\\n<ol>\\n<li>是 Innodb 引擎生成的日志，实现了事务的<strong>持久性</strong>。增删改的数据先改 buffer pool，然后将该操作<br>\\n记录在 RedoLog 里。</li>\\n<li>RedoLog 也是先写到 <code>redolog buffer</code> 里，再按一个策略写入文件。</li>\\n</ol>\\n<ul>\\n<li><code>redolog buffer</code> 是一个环形结构，会被定时的刷盘，也有一个水位线，高于水位线也会刷盘</li>\\n</ul>\\n<ol start=\\"3\\">\\n<li>RedoLog 是追加写，更快。</li>\\n</ol>","autoDesc":true}');export{s as comp,c as data};
